apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: release
spec:
  pipelineSpec:
    tasks:
    - name: from-build-pack
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          env:
          - name: _JAVA_OPTIONS
            value: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true
              -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4
              -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx4096m
          - name: MAVEN_OPTS
            value: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=25
              -Dmaven.wagon.http.retryHandler.count=3
          - name: HOME
            value: /tekton/home
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          name: ""
          resources: {}
          volumeMounts:
          - mountPath: /root/.m2/
            name: maven-settings
          - mountPath: /root/.gnupg
            name: release-gpg
          workingDir: /workspace/source
        steps:
        - env:
          - name: GIT_TOKEN
            valueFrom:
              secretKeyRef:
                key: password
                name: tekton-git
          - name: GIT_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: tekton-git
          image: ghcr.io/jenkins-x/jx-release-version:2.5.2
          name: next-version
          resources: {}
          script: |
            #!/usr/bin/env sh
            jx-release-version --tag > VERSION
        - image: ghcr.io/jenkins-x/jx-boot:3.5.1
          name: jx-variables
          resources:
            # set requests for the pod here
            requests:
              cpu: "2"
              memory: "4Gi"
          script: |
            #!/usr/bin/env sh
            jx gitops variables
        - image: ghcr.io/jenkins-x/maven-quarkus-mandrel:0.0.2
          name: build-mvn-deploy
          resources:
          script: |
            #!/usr/bin/env bash
            source .jx/variables.sh

            # modify the pom.xml
            echo "upgrading the pom to version $VERSION"
            mvn versions:set -DnewVersion=$VERSION

            mvn --no-transfer-progress clean deploy -Pnative
        - image: ghcr.io/jenkins-x/jx-registry:0.1.8
          name: check-registry
          resources: {}
        - image: gcr.io/kaniko-project/executor:v1.6.0-debug
          name: build-container-build
          resources: {}
          script: |
            #!/busybox/sh
            source .jx/variables.sh
            cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
            /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=${DOCKERFILE_PATH:-Dockerfile} --destination=$PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
        - image: ghcr.io/jenkins-x/jx-changelog:0.3.0
          name: promote-changelog
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh

            if [ -d "charts/$REPO_NAME" ]; then
            jx gitops yset -p version -v "$VERSION" -f ./charts/$REPO_NAME/Chart.yaml
            jx gitops yset -p appVersion -v "$VERSION" -f ./charts/$REPO_NAME/Chart.yaml
            jx gitops yset -p 'image.repository' -v $DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME -f ./charts/$REPO_NAME/values.yaml
            jx gitops yset -p 'image.tag' -v "$VERSION" -f ./charts/$REPO_NAME/values.yaml;
            else echo no charts; fi

            jx changelog create --version v${VERSION}

            git add * || true
            git commit -a -m "chore: release $VERSION" --allow-empty
            git tag -fa v$VERSION -m "Release version $VERSION"
            git push --force origin v$VERSION
        - image: ghcr.io/jenkins-x/jx-boot:3.5.1
          name: promote-helm-release
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh
            jx gitops helm release
        - image: ghcr.io/jenkins-x-plugins/jx-promote:0.4.0
          name: promote-jx-promote
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh
            jx promote -b --all --timeout 1h --no-poll
        volumes:
        - name: maven-settings
          secret:
            secretName: jenkins-maven-settings
        - name: release-gpg
          secret:
            optional: true
            secretName: jenkins-release-gpg
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 12h0m0s
status: {}

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  creationTimestamp: null
  name: git-clone-pr
spec:
  params:
  - description: The unique build number
    name: BUILD_ID
    type: string
  - description: The fileName of the job which is the trigger context fileName
    name: JOB_NAME
    type: string
  - description: The specification of the job
    name: JOB_SPEC
    type: string
  - description: 'The kind of the job: postsubmit or presubmit'
    name: JOB_TYPE
    type: string
  - description: The base git reference of the pull request
    name: PULL_BASE_REF
    type: string
  - description: The git sha of the base of the pull request
    name: PULL_BASE_SHA
    type: string
  - default: ""
    description: The git pull request number
    name: PULL_NUMBER
    type: string
  - default: ""
    description: The git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
    name: PULL_PULL_REF
    type: string
  - description: The git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
    name: PULL_PULL_SHA
    type: string
  - description: The git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
    name: PULL_REFS
    type: string
  - description: The git repository fileName
    name: REPO_NAME
    type: string
  - description: The git repository owner (user or organisation)
    name: REPO_OWNER
    type: string
  - description: The URL of the git repo to clone
    name: REPO_URL
    type: string
  stepTemplate:
    env:
    - name: HOME
      value: /workspace
    - name: BUILD_ID
      value: $(params.BUILD_ID)
    - name: JOB_NAME
      value: $(params.JOB_NAME)
    - name: JOB_SPEC
      value: $(params.JOB_SPEC)
    - name: JOB_TYPE
      value: $(params.JOB_TYPE)
    - name: PULL_BASE_REF
      value: $(params.PULL_BASE_REF)
    - name: PULL_BASE_SHA
      value: $(params.PULL_BASE_SHA)
    - name: PULL_NUMBER
      value: $(params.PULL_NUMBER)
    - name: PULL_PULL_REF
      value: $(params.PULL_PULL_REF)
    - name: PULL_PULL_SHA
      value: $(params.PULL_PULL_SHA)
    - name: PULL_REFS
      value: $(params.PULL_REFS)
    - name: REPO_NAME
      value: $(params.REPO_NAME)
    - name: REPO_OWNER
      value: $(params.REPO_OWNER)
    - name: REPO_URL
      value: $(params.REPO_URL)
    envFrom:
    - secretRef:
        name: jx-boot-job-env-vars
        optional: true
    name: ""
    resources: {}
  steps:
  - envFrom:
    - secretRef:
        name: jx-boot-job-env-vars
        optional: true
    image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.27.0
    name: git-clone
    resources: {}
    script: |
      #!/bin/sh
      export SUBDIR="source"
      echo "git cloning url: $REPO_URL version $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER@$PULL_PULL_SHA to dir: $SUBDIR"
      git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
      git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
      git config --global credential.helper store
      git clone $REPO_URL $SUBDIR
      cd $SUBDIR
      git fetch origin $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER
      git checkout $(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER
      git reset --hard $PULL_PULL_SHA
      echo "checked out revision: $PULL_PULL_REF:$(echo $JOB_NAME | tr '[:lower:]' '[:upper:]')-$PULL_NUMBER@$PULL_PULL_SHA to dir: $SUBDIR"
    workingDir: /workspace
  - envFrom:
    - secretRef:
        name: jx-boot-job-env-vars
        optional: true
    image: ghcr.io/jenkins-x/jx-boot:3.10.88
    name: git-merge
    resources: {}
    script: |
      #!/usr/bin/env sh
      jx gitops git merge
    workingDir: /workspace/source
  workspaces:
  - description: The git repo will be cloned onto the volume backing this workspace
    mountPath: /workspace
    name: output

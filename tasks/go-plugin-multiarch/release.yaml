apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: release
spec:
  pipelineSpec:
    tasks:
    - name: chart
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          env:
          - name: HOME
            value: /tekton/home
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          name: ""
          resources: {}
          workingDir: /workspace/source
        steps:
        - env:
          - name: GIT_TOKEN
            valueFrom:
              secretKeyRef:
                key: password
                name: tekton-git
          - name: GIT_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: tekton-git
          image: ghcr.io/jenkins-x/jx-release-version:2.5.0
          name: next-version
          resources: {}
          script: |
            #!/usr/bin/env sh
            jx-release-version --tag > VERSION
        - image: ghcr.io/jenkins-x/jx-boot:3.2.205
          name: jx-variables
          resources: {}
          script: |
            #!/usr/bin/env sh
            jx gitops variables
        - image: golang:1.15
          name: release-binary
          resources: {}
          script: |
            #!/usr/bin/env bash
            source .jx/variables.sh
            make release
        - image: gcr.io/kaniko-project/executor:v1.6.0-debug
          name: build-and-push-image
          resources: {}
          script: |
            #!/busybox/sh
            source .jx/variables.sh
            cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
            /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=${DOCKERFILE_PATH:-Dockerfile} --destination=gcr.io/$DOCKER_REGISTRY_ORG/$REPO_NAME:$VERSION --destination=gcr.io/$DOCKER_REGISTRY_ORG/$REPO_NAME:latest
        - image: jnorwood/helm-docs:v1.4.0
          name: chart-docs
          resources: {}
          script: |
            #!/bin/ash
            if [ -d "charts/$REPO_NAME" ]; then cd charts/$REPO_NAME
            helm-docs; else echo no charts; fi
        - image: ghcr.io/jenkins-x/jx-changelog:0.0.47
          name: changelog
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh

            if [ -d "charts/$REPO_NAME" ]; then
            jx gitops yset -p version -v "$VERSION" -f ./charts/$REPO_NAME/Chart.yaml
            jx gitops yset -p appVersion -v "$VERSION" -f ./charts/$REPO_NAME/Chart.yaml
            jx gitops yset -p 'image.repository' -v $DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME -f ./charts/$REPO_NAME/values.yaml
            jx gitops yset -p 'image.tag' -v "$VERSION" -f ./charts/$REPO_NAME/values.yaml;
            else echo no charts; fi

            jx changelog create --verbose --header-file=hack/changelog-header.md --version=$VERSION --rev=$PULL_BASE_SHA --output-markdown=changelog.md --update-release=true
        - image: ghcr.io/jenkins-x/jx-boot:3.2.205
          name: release-chart
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh
            jx gitops helm release
        - env:
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                key: password
                name: tekton-git
          image: goreleaser/goreleaser:v0.155.0
          name: upload-binaries
          resources: {}
          script: |
            #!/bin/bash
            source .jx/variables.sh

            git add * || true
            git add * || true
            git commit -a -m "chore: release $VERSION" --allow-empty
            git tag -fa v$VERSION -m "Release version $VERSION"
            git push --force origin v$VERSION

            export BRANCH=$(git rev-parse --abbrev-ref HEAD)
            export BUILDDATE=$(date)
            export REV=$(git rev-parse HEAD)
            export GOVERSION="1.15"
            export ROOTPACKAGE="github.com/$REPO_OWNER/$REPO_NAME"
            goreleaser release
        - image: google/cloud-sdk:slim
          name: multi-arch-images
          resources: {}
          script: |
            #!/bin/bash
            source .jx/variables.sh
            gcloud builds submit --config cloudbuild.yaml --project jenkinsxio --substitutions=_VERSION="$VERSION"
        - command:
          - jx-updatebot
          - pr
          image: ghcr.io/jenkins-x/jx-updatebot:0.1.3
          name: promote-release
          resources: {}
  serviceAccountName: tekton-bot
  timeout: 12h0m0s
status: {}

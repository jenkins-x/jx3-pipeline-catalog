apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  creationTimestamp: null
  name: build-scan-push
spec:
  params:
  - description: The unique build number
    name: BUILD_ID
    type: string
  - description: The fileName of the job which is the trigger context fileName
    name: JOB_NAME
    type: string
  - description: The specification of the job
    name: JOB_SPEC
    type: string
  - description: 'The kind of the job: postsubmit or presubmit'
    name: JOB_TYPE
    type: string
  - description: The base git reference of the pull request
    name: PULL_BASE_REF
    type: string
  - description: The git sha of the base of the pull request
    name: PULL_BASE_SHA
    type: string
  - default: ""
    description: The git pull request number
    name: PULL_NUMBER
    type: string
  - default: ""
    description: The git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
    name: PULL_PULL_REF
    type: string
  - description: The git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
    name: PULL_PULL_SHA
    type: string
  - description: The git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
    name: PULL_REFS
    type: string
  - description: The git repository fileName
    name: REPO_NAME
    type: string
  - description: The git repository owner (user or organisation)
    name: REPO_OWNER
    type: string
  - description: The URL of the git repo to clone
    name: REPO_URL
    type: string
  stepTemplate:
    env:
    - name: HOME
      value: /workspace
    - name: BUILD_ID
      value: $(params.BUILD_ID)
    - name: JOB_NAME
      value: $(params.JOB_NAME)
    - name: JOB_SPEC
      value: $(params.JOB_SPEC)
    - name: JOB_TYPE
      value: $(params.JOB_TYPE)
    - name: PULL_BASE_REF
      value: $(params.PULL_BASE_REF)
    - name: PULL_BASE_SHA
      value: $(params.PULL_BASE_SHA)
    - name: PULL_NUMBER
      value: $(params.PULL_NUMBER)
    - name: PULL_PULL_REF
      value: $(params.PULL_PULL_REF)
    - name: PULL_PULL_SHA
      value: $(params.PULL_PULL_SHA)
    - name: PULL_REFS
      value: $(params.PULL_REFS)
    - name: REPO_NAME
      value: $(params.REPO_NAME)
    - name: REPO_OWNER
      value: $(params.REPO_OWNER)
    - name: REPO_URL
      value: $(params.REPO_URL)
    envFrom:
    - secretRef:
        name: jx-boot-job-env-vars
        optional: true
    name: ""
    resources: {}
    workingDir: /workspace/source
  steps:
  - image: gcr.io/kaniko-project/executor:v1.8.0-debug
    name: build-container
    resources: {}
    script: |
      #!/busybox/sh
      source .jx/variables.sh
      /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=${DOCKERFILE_PATH:-Dockerfile} --destination=$PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION --no-push --tarPath image.tar
      cp /kaniko/docker-credential-gcr /workspace/source
      cp /kaniko/docker-credential-ecr-login /workspace/source
      cp /kaniko/docker-credential-acr-env /workspace/source
  - image: ghcr.io/jenkins-x/trivydb:latest
    name: copy-vulns-db
    resources: {}
    script: |
      #!/bin/sh
      mkdir -p ~/.cache/trivy/db
      mv /trivydb/* ~/.cache/trivy/db/
  - image: aquasec/trivy:0.35.0
    name: vulnscan
    resources: {}
    script: |
      trivy image --skip-update --input /workspace/source/image.tar > /workspace/source/scanresults.txt
  - image: ghcr.io/jenkins-x/jx-boot:3.10.88
    name: analyze
    resources: {}
    script: |
      #!/bin/bash
      source .jx/variables.sh
      cat /workspace/source/scanresults.txt
      if [[ -n "$PULL_NUMBER" ]]
      then
        jx gitops pr comment -c "\`\`\`  $(< /workspace/source/scanresults.txt)  \`\`\`"
      fi
      if egrep -i "${SCAN_VULNERABILITY_REGEXP:-HIGH|CRITICAL}" /workspace/source/scanresults.txt | grep -qv Total
      then
        echo "Vulnerabilities found!"
        exit 1
      else
        echo "No vulnerabilities found."
      fi
  - image: gcr.io/go-containerregistry/crane/debug:59b5c06eb64f0b6500bd94d71b473adf6079e444
    name: push-container
    resources: {}
    script: |
      #!/busybox/sh
      source .jx/variables.sh
      export PATH=/workspace/source:$PATH
      cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson ~/.docker/config.json
      crane push /workspace/source/image.tar $PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
  - image: ghcr.io/jenkins-x/cosign:v0.3.1-0.0.3
    name: sign-and-push-signature-and-cleanup
    resources: {}
    script: |
      #!/busybox/sh
      source .jx/variables.sh
      cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson ~/.docker/config.json
      cosign sign --key k8s://jx/cosign $PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
      cosign verify --key k8s://jx/cosign $PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
      rm /workspace/source/image.tar /workspace/source/scanresults.txt /workspace/source/docker-credential-gcr /workspace/source/docker-credential-ecr-login /workspace/source/docker-credential-acr-env
  workspaces:
  - description: Build, scan and push to the registry
    mountPath: /workspace
    name: output

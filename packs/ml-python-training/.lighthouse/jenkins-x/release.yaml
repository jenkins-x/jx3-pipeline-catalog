apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/prependStepsURL: https://raw.githubusercontent.com/jenkins-x/jx3-pipeline-catalog/005e78cf69b643862344397a635736a51dd1bd89/tasks/git-clone/git-clone.yaml
  name: release
spec:
  pipelineSpec:
    tasks:
    - name: from-build-pack
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          name: ""
          resources:
            requests:
              cpu: "2"
              memory: 4Gi
          workingDir: /workspace/source
        steps:
        - image: gcr.io/jenkinsxio/jx-release-version:1.0.42
          name: next-version
          resources: {}
          script: |
            #!/usr/bin/env bash
            VERSION=$(jx-release-version)
            echo $VERSION > VERSION

        - image: gcr.io/jenkinsxio/jx-boot:3.0.770
          name: jx-variables
          resources: {}
          script: |
            #!/usr/bin/env sh
            jx gitops variables
        - image: gcr.io/jenkinsxio/builder-machine-learning:2.1.150-769
          name: build-flake8
          resources: {}
          script: |
            #!/bin/sh
            source /root/.bashrc
            flake8
        - image: gcr.io/jenkinsxio/builder-machine-learning:2.1.150-769
          name: build-training
          resources: {}
          script: |
            #!/bin/sh
            source /root/.bashrc
            python3 -m pip install -r ./requirements.txt
            python3 app.py
        - image: gcr.io/jenkinsxio/builder-machine-learning:2.1.150-769
          name: build-export-model
          resources: {}
          script: |+
            #!/bin/sh
            source /root/.bashrc
            export TARGET_SERVICE=`echo $APP_NAME | sed -Ee s/-training$/-service/`
            export GIT_PROVIDER=`jx repo -qub | grep -oP '(^https?:\/\/[a-zA-Z\d-\.]+)'`
            export TARGET_SERVICE_REPO=`echo $GIT_PROVIDER/$REPO_OWNER/$TARGET_SERVICE`
            git clone $TARGET_SERVICE_REPO
            cd $TARGET_SERVICE
            git checkout syncmodel || git checkout -b syncmodel
            git lfs install
            git lfs track '*.onnx'
            cp ../*.onnx .
            git add *.onnx
            { jx create pullrequest --push -b --title 'New model trained' --body 'feat: New model trained' || echo 'Using previous PR'; }
            sha1sum *.onnx >&2

  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 240h0m0s
status: {}

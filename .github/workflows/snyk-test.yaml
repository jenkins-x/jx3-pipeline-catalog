name: Workflow for using Snyk 
on:
  workflow_call:
    inputs:
      workload_identity_provider:
        type: string
      service_account:
        type: string
    secrets:
      SNYK_TOKEN:
        description: "Snyk token"
        required: true

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set short git commit SHA
      id: vars
      run: |
        calculatedSha=$(git rev-parse --short ${{ github.sha }})
        echo "::set-output name=version::0.0.0-$calculatedSha"
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - id: "auth"
      name: "Authenticate to Google Cloud"
      uses: "google-github-actions/auth@v1"
      with:
        token_format: "access_token"
        workload_identity_provider: ${{ inputs.workload_identity_provider }}
        service_account: ${{ inputs.service_account }}
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        registry: "us-central1-docker.pkg.dev" # or
        username: "oauth2accesstoken"
        password: "${{ steps.auth.outputs.access_token }}"
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        tags: us-central1-docker.pkg.dev/prodoscore-artifactory/dev-images/${{ github.event.repository.name }}:${{ steps.vars.outputs.version }}
    - name: Run Snyk to check Docker image for vulnerabilities
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        SNYK_REGISTRY_USERNAME: "oauth2accesstoken"
        SNYK_REGISTRY_PASSWORD: "${{ steps.auth.outputs.access_token }}"
      with:
        image: us-central1-docker.pkg.dev/prodoscore-artifactory/dev-images/${{ github.event.repository.name }}:${{ steps.vars.outputs.version }}
        args: --file=Dockerfile
        

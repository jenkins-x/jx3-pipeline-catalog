name: node_regular_unit_test_remote_workflow
on:
  workflow_call:
    inputs:
      node-version:
        type: string
        required: true
      repository:
        type: string
        required: true
      enable:
        type: string
        required: true   

env:
  REPOSITORY: ${{ inputs.repository }}    

jobs:
  code_validation:
    name: Linting and Unit Testing
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write
      pull-requests: write
    if: ${{ inputs.enable == 'true' }}
    steps:
      - name: Check out my other private repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ github.event.inputs.node-version }}
          # check-latest: true

      - name: Install dependencies
        id: installation
        run: npm ci

      - name: Check Lints 
        id: run_eslint
        run: |
          npm run lint
        continue-on-error: true
      
      - name: Run Unit Tests 
        id: run_jest
        run: |
          npm run test
        continue-on-error: true

      - name: Audit Check
        id: run_audit
        run: |
          npm run audit
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.pullrequest_remote_work_flow_secret }}
          script: |
            const output = `### Pipeline Results 🤖\n
            #### Lint Results 📝\`${{ steps.run_eslint.outcome }}\`
            #### Unit Testing Results 📝\`${{ steps.run_jest.outcome }}\`
            #### Audit Checking Results 📝\`${{ steps.run_audit.outcome }}\`
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })